!function(s){var e={};function n(t){if(e[t])return e[t].exports;var i=e[t]={i:t,l:!1,exports:{}};return s[t].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=s,n.c=e,n.d=function(s,e,t){n.o(s,e)||Object.defineProperty(s,e,{enumerable:!0,get:t})},n.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},n.t=function(s,e){if(1&e&&(s=n(s)),8&e)return s;if(4&e&&"object"==typeof s&&s&&s.__esModule)return s;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:s}),2&e&&"string"!=typeof s)for(var i in s)n.d(t,i,function(e){return s[e]}.bind(null,i));return t},n.n=function(s){var e=s&&s.__esModule?function(){return s.default}:function(){return s};return n.d(e,"a",e),e},n.o=function(s,e){return Object.prototype.hasOwnProperty.call(s,e)},n.p="",n(n.s=0)}([function(s,e,n){"use strict";n.r(e);var t=function(s){const e={"01d":"assets/icons/sun.svg","01n":"assets/icons/moon.svg","02d":"assets/icons/f-cloud-d.svg","02n":"assets/icons/f-cloud-n.svg","03d":"assets/icons/s-cloud.svg","03n":"assets/icons/s-cloud.svg","04d":"assets/icons/b-cloud.svg","04n":"assets/icons/b-cloud.svg","09d":"assets/icons/s-rain.svg","09n":"assets/icons/s-rain.svg","10d":"assets/icons/rain-d.svg","10n":"assets/icons/rain-n.svg","11d":"assets/icons/storm.svg","11n":"assets/icons/storm.svg","13d":"assets/icons/snow.svg","13n":"assets/icons/snow.svg","50d":"assets/icons/mist.svg","50n":"assets/icons/mist.svg"};function n(e){e.currentTarget.firstElementChild.classList.toggle("active"),e.currentTarget.lastElementChild.classList.toggle("active"),s.querySelectorAll(".temperature").forEach(s=>{s.classList.toggle("active")})}function t(s){return new Date(1e3*s).toString().match(/\d{2}:\d{2}:\d{2}/).join("")}return Object.freeze({render:function(i){let{city:r,temp:a,tempF:o,desc:c,icon:d,humidity:l,pressure:u,visibility:p,wind:{speed:v,deg:g},sunrise:f,sunset:m}=i;s.classList.remove("card-loading"),s.innerHTML=`<span class="city">${r}</span>\n    <div class="temp-wrap">\n        <img class="icon" class="responsive-img" src=${e[d]}\n            alt="Weather icon">\n        <span class="temperature active">${a}</span>\n        <span class="temperature">${o}</span>\n        <div class="toggle-temp">\n            <span class="left-btn active">C &deg;</span>\n            <span class="right-btn">F &deg;</span>\n        </div>\n    </div>    \n    <div class="description">${c}</div>\n    <div class="details">\n        <div class="humidity flex-center"><span>Humidity:</span> ${l}%</div>\n        <div class="pressure flex-center"><span>Pressure:</span> ${u}hPa</div>\n        <div class="visibility flex-center"><span>Visibility:</span> ${p||"N/A"}</div>\n        <div class="wind flex-center">\n          <span>Wind:</span>\n          <div class="flex-center">\n            <img src="assets/icons/arrows.svg" class="direction" style = "transform: rotate(${g}deg);" />\n            <div class="speed">${v}m/s</div>\n          </div>\n        </div>\n        <div class="sunrise flex-center"><span>Sunrise:</span> ${t(f)}</div>\n        <div class="sunset flex-center"><span>Sunset:</span> ${t(m)}</div>\n    </div>`,s.querySelector(".toggle-temp").addEventListener("click",n)},loading:function(){s.classList.add("card-loading"),s.innerHTML='<div class="spinner" />'},errorMsg:function(e){s.innerHTML=`<div>${e}<div/>`}})};var i=function(){return Object.freeze({fetchData:async function s(e,n,t){const i=`https://fcc-weather-api.glitch.me/api/current?lat=${e.toFixed(2)}&lon=${n.toFixed(2)}`,r=await axios.get(i);try{r.data.main.tempF=function(s){return Math.floor(1.8*s+32)}(r.data.main.temp),t(r.data)}catch(i){/TypeError:/.test(i)&&s(e,n,t)}}})};var r=function(s,e){function n(e){const{name:n,visibility:t,main:{temp:i,tempF:r,humidity:a,pressure:o},weather:[{description:c,icon:d}],sys:{sunrise:l,sunset:u},wind:{speed:p,deg:v}}=e,g={city:n,temp:Math.floor(i),tempF:Math.floor(r),desc:c,icon:d.substr(d.search(/\.png/)-3,3),humidity:a,pressure:o,visibility:t,wind:{speed:p,deg:v},sunrise:l,sunset:u};s.render(g)}return Object.freeze({getLocation:function(){s.loading(),navigator.geolocation?navigator.geolocation.getCurrentPosition(function(s){const t=s.coords.latitude,i=s.coords.longitude;e.fetchData(t,i,n)},function(){s.errorMsg("Unable to retrieve your location")}):s.errorMsg("Geolocation is not supported by your browser")}})};const a=document.getElementById("weather-card"),o=i();r(t(a),o).getLocation()}]);